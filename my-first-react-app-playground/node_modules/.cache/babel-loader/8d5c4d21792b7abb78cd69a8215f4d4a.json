{"ast":null,"code":"import _defineProperty from \"/Users/rohde/Documents/fdmg-projects/react-projects/my-first-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/rohde/Documents/fdmg-projects/react-projects/my-first-react-app/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React, { useState } from \"react\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: \"sdsfdfds\",\n        name: \"sven_1\",\n        age: 30\n      }, {\n        id: \"sdlihjos\",\n        name: \"sven_2\",\n        age: 31\n      }, {\n        id: \"ogjopfgj\",\n        name: \"sven_3\",\n        age: 32\n      }],\n      otherState: \"other state man !\"\n    };\n\n    this.swtchNameHandler = newName => {\n      console.log(\"CLicked SwitchName Handler\"); // this.state.persons[0].name = 'sven_new_1';\n\n      this.setState({\n        persons: [{\n          name: newName,\n          age: 30\n        }, {\n          name: \"sven_2\",\n          age: 31\n        }, {\n          name: \"sven_3\",\n          age: 32\n        }],\n        showPersons: false\n      });\n    };\n\n    this.nameChangedHandler = event => {\n      console.log(\"CLicked Name Changed Handler\");\n      this.setState({\n        persons: [{\n          name: \"ElSevnno 2.0\",\n          age: 30\n        }, {\n          name: event.target.value,\n          age: 31\n        }, {\n          name: \"sven_3\",\n          age: 32\n        }]\n      });\n    };\n\n    this.nameChangedHandler2 = (event, id) => {\n      console.log(\"CLicked Name Changed Handler for \" + id);\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      }); // copy person object by personIndex\n\n      const person = _objectSpread({}, this.state.persons[personIndex]); // set person new name to event target value\n\n\n      person.name = event.target.value; // copy persons state array\n\n      const persons = [...this.state.persons]; // set person by index to new person ob with new name\n\n      persons[personIndex] = person; // update state to set to new persons array\n\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.manipulateUsernameHandler = event => {\n      console.log(\"Manipulate clicked\");\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      console.log(\"Toggle Persons Handler Clicked !\");\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: \"green\",\n      font: \"inherit\",\n      color: \"white\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\"\n    };\n    let persons = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Nothing to show !\");\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          key: person.id,\n          change: event => this.nameChangedHandler2(event, person.id),\n          name: person.name,\n          age: person.age,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Hi I'm a REACT App\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Toggle\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), persons);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rohde/Documents/fdmg-projects/react-projects/my-first-react-app/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","swtchNameHandler","newName","console","log","setState","showPersons","nameChangedHandler","event","target","value","nameChangedHandler2","personIndex","findIndex","p","person","manipulateUsernameHandler","username","togglePersonsHandler","doesShow","deletePersonHandler","splice","render","style","backgroundColor","font","color","border","padding","cursor","map","index"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,EAAE,EAAE,UAAN;AAAkBC,QAAAA,IAAI,EAAE,QAAxB;AAAkCC,QAAAA,GAAG,EAAE;AAAvC,OADO,EAEP;AAAEF,QAAAA,EAAE,EAAE,UAAN;AAAkBC,QAAAA,IAAI,EAAE,QAAxB;AAAkCC,QAAAA,GAAG,EAAE;AAAvC,OAFO,EAGP;AAAEF,QAAAA,EAAE,EAAE,UAAN;AAAkBC,QAAAA,IAAI,EAAE,QAAxB;AAAkCC,QAAAA,GAAG,EAAE;AAAvC,OAHO,CADH;AAMNC,MAAAA,UAAU,EAAE;AANN,KADkB;;AAAA,SAU1BC,gBAV0B,GAUPC,OAAO,IAAI;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAD4B,CAE5B;;AACA,WAAKC,QAAL,CAAc;AACZT,QAAAA,OAAO,EAAE,CACP;AAAEE,UAAAA,IAAI,EAAEI,OAAR;AAAiBH,UAAAA,GAAG,EAAE;AAAtB,SADO,EAEP;AAAED,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,GAAG,EAAE;AAAvB,SAFO,EAGP;AAAED,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,GAAG,EAAE;AAAvB,SAHO,CADG;AAMZO,QAAAA,WAAW,EAAE;AAND,OAAd;AAQD,KArByB;;AAAA,SAwB1BC,kBAxB0B,GAwBLC,KAAK,IAAI;AAC5BL,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,WAAKC,QAAL,CAAc;AACZT,QAAAA,OAAO,EAAE,CACP;AAAEE,UAAAA,IAAI,EAAE,cAAR;AAAwBC,UAAAA,GAAG,EAAE;AAA7B,SADO,EAEP;AAAED,UAAAA,IAAI,EAAEU,KAAK,CAACC,MAAN,CAAaC,KAArB;AAA4BX,UAAAA,GAAG,EAAE;AAAjC,SAFO,EAGP;AAAED,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,GAAG,EAAE;AAAvB,SAHO;AADG,OAAd;AAOD,KAjCyB;;AAAA,SAmC1BY,mBAnC0B,GAmCJ,CAACH,KAAD,EAAQX,EAAR,KAAe;AACnCM,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAsCP,EAAlD;AACA,YAAMe,WAAW,GAAG,KAAKjB,KAAL,CAAWC,OAAX,CAAmBiB,SAAnB,CAA6BC,CAAC,IAAI;AACpD,eAAOA,CAAC,CAACjB,EAAF,KAASA,EAAhB;AACD,OAFmB,CAApB,CAFmC,CAMnC;;AACA,YAAMkB,MAAM,qBAAQ,KAAKpB,KAAL,CAAWC,OAAX,CAAmBgB,WAAnB,CAAR,CAAZ,CAPmC,CAQnC;;;AACAG,MAAAA,MAAM,CAACjB,IAAP,GAAcU,KAAK,CAACC,MAAN,CAAaC,KAA3B,CATmC,CAUnC;;AACA,YAAMd,OAAO,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,CAAhB,CAXmC,CAYnC;;AACAA,MAAAA,OAAO,CAACgB,WAAD,CAAP,GAAuBG,MAAvB,CAbmC,CAcnC;;AACA,WAAKV,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAEA;AAAX,OAAd;AACD,KAnDyB;;AAAA,SAqD1BoB,yBArD0B,GAqDER,KAAK,IAAI;AACnCL,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,WAAKC,QAAL,CAAc;AACZY,QAAAA,QAAQ,EAAET,KAAK,CAACC,MAAN,CAAaC;AADX,OAAd;AAGD,KA1DyB;;AAAA,SA4D1BQ,oBA5D0B,GA4DH,MAAM;AAC3Bf,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA,YAAMe,QAAQ,GAAG,KAAKxB,KAAL,CAAWW,WAA5B;AACA,WAAKD,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE,CAACa;AAAhB,OAAd;AACD,KAhEyB;;AAAA,SAkE1BC,mBAlE0B,GAkEJR,WAAW,IAAI;AACnC;AACA,YAAMhB,OAAO,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,CAAhB;AAEAA,MAAAA,OAAO,CAACyB,MAAR,CAAeT,WAAf,EAA4B,CAA5B;AACA,WAAKP,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAEA;AAAX,OAAd;AACD,KAxEyB;AAAA;;AA0E1B0B,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG;AACZC,MAAAA,eAAe,EAAE,OADL;AAEZC,MAAAA,IAAI,EAAE,SAFM;AAGZC,MAAAA,KAAK,EAAE,OAHK;AAIZC,MAAAA,MAAM,EAAE,gBAJI;AAKZC,MAAAA,OAAO,EAAE,KALG;AAMZC,MAAAA,MAAM,EAAE;AANI,KAAd;AAUA,QAAIjC,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAd;;AACA,QAAI,KAAKD,KAAL,CAAWW,WAAf,EAA4B;AAC1BV,MAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWC,OAAX,CAAmBkC,GAAnB,CAAuB,CAACf,MAAD,EAASgB,KAAT,KAAmB;AACzC,eACE,oBAAC,MAAD;AACE,UAAA,KAAK,EAAE,MAAM,KAAKX,mBAAL,CAAyBW,KAAzB,CADf;AAEE,UAAA,GAAG,EAAEhB,MAAM,CAAClB,EAFd;AAGE,UAAA,MAAM,EAAEW,KAAK,IAAI,KAAKG,mBAAL,CAAyBH,KAAzB,EAAgCO,MAAM,CAAClB,EAAvC,CAHnB;AAIE,UAAA,IAAI,EAAEkB,MAAM,CAACjB,IAJf;AAKE,UAAA,GAAG,EAAEiB,MAAM,CAAChB,GALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,OAVA,CADH,CADF;AAeD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE;AAAQ,MAAA,KAAK,EAAEwB,KAAf;AAAsB,MAAA,OAAO,EAAE,KAAKL,oBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAUGtB,OAVH,CADF;AAcD;;AAtHyB;;AAyH5B,eAAeF,GAAf","sourcesContent":["// import React, { useState } from \"react\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: \"sdsfdfds\", name: \"sven_1\", age: 30 },\n      { id: \"sdlihjos\", name: \"sven_2\", age: 31 },\n      { id: \"ogjopfgj\", name: \"sven_3\", age: 32 }\n    ],\n    otherState: \"other state man !\"\n  };\n\n  swtchNameHandler = newName => {\n    console.log(\"CLicked SwitchName Handler\");\n    // this.state.persons[0].name = 'sven_new_1';\n    this.setState({\n      persons: [\n        { name: newName, age: 30 },\n        { name: \"sven_2\", age: 31 },\n        { name: \"sven_3\", age: 32 }\n      ],\n      showPersons: false\n    });\n  };\n\n  // Event Object useage\n  nameChangedHandler = event => {\n    console.log(\"CLicked Name Changed Handler\");\n    this.setState({\n      persons: [\n        { name: \"ElSevnno 2.0\", age: 30 },\n        { name: event.target.value, age: 31 },\n        { name: \"sven_3\", age: 32 }\n      ]\n    });\n  };\n\n  nameChangedHandler2 = (event, id) => {\n    console.log(\"CLicked Name Changed Handler for \" + id);\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    // copy person object by personIndex\n    const person = { ...this.state.persons[personIndex] };\n    // set person new name to event target value\n    person.name = event.target.value;\n    // copy persons state array\n    const persons = [...this.state.persons];\n    // set person by index to new person ob with new name\n    persons[personIndex] = person;\n    // update state to set to new persons array\n    this.setState({ persons: persons });\n  };\n\n  manipulateUsernameHandler = event => {\n    console.log(\"Manipulate clicked\");\n    this.setState({\n      username: event.target.value\n    });\n  };\n\n  togglePersonsHandler = () => {\n    console.log(\"Toggle Persons Handler Clicked !\");\n    const doesShow = this.state.showPersons;\n    this.setState({ showPersons: !doesShow });\n  };\n\n  deletePersonHandler = personIndex => {\n    // const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n\n    persons.splice(personIndex, 1);\n    this.setState({ persons: persons });\n  };\n\n  render() {\n    const style = {\n      backgroundColor: \"green\",\n      font: \"inherit\",\n      color: \"white\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\"\n    };\n\n\n    let persons = <div>Nothing to show !</div>;\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return (\n              <Person\n                click={() => this.deletePersonHandler(index)}\n                key={person.id}\n                change={event => this.nameChangedHandler2(event, person.id)}\n                name={person.name}\n                age={person.age}\n              />\n            );\n          })}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Hi I'm a REACT App</h1>\n        <p />\n\n        <button style={style} onClick={this.togglePersonsHandler}>\n          Toggle\n        </button>\n\n        <p />\n\n        {persons}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}